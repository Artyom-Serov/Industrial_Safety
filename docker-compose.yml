services:
  db:
    image: postgres:13.10
    container_name: lp_db
    restart: always
    env_file:
      - .env
    volumes:
      - lp_data:/var/lib/postgresql/data
    networks:
      - backend_network

  redis:
    image: redis:6.2
    container_name: lp_redis
    restart: unless-stopped
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      - backend_network

  backend:
    build:
      context: ./backend
    container_name: lp_backend
    restart: on-failure
    command: >
      sh -c "sleep 5 && \
            cp -r /app/collected_static/. /backend_static/ && \
            python manage.py migrate && \
            gunicorn --bind 0.0.0.0:8000 backend.wsgi:application"
    volumes:
      - static:/backend_static
      - templates:/frontend/templates
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - backend_network

  frontend:
    build:
      context: ./frontend
    container_name: lp_frontend
    command: >
      sh -c "cp -r /frontend/static/. /frontend_static/"
    volumes:
      - static:/frontend_static
      - templates:/frontend/templates
    depends_on:
      - backend
    networks:
      - backend_network

  nginx:
    build:
      context: ./web
    container_name: lp_nginx
    restart: unless-stopped
    volumes:
      - static:/staticfiles
    ports:
      - "8000:80"
    depends_on:
      - db
      - backend
    networks:
      - backend_network

volumes:
  lp_data:
  static:
  templates:

networks:
  backend_network:
    driver: bridge